<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Postgresql on Just my blog</title>
    <link>http://iryndin.net/tags/postgresql/</link>
    <description>Recent content in Postgresql on Just my blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Nov 2017 09:59:58 +0300</lastBuildDate>
    
	<atom:link href="http://iryndin.net/tags/postgresql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PostgreSQL transaction isolation levels</title>
      <link>http://iryndin.net/post/postgresql_transaction_isolation_levels/</link>
      <pubDate>Tue, 28 Nov 2017 09:59:58 +0300</pubDate>
      
      <guid>http://iryndin.net/post/postgresql_transaction_isolation_levels/</guid>
      <description>On previous post about transaction isolation levels we considered what is transaction isolation level and how this influence the result we get from transaction. But from database to database details are diferent, so let&amp;rsquo;s consider transaction isolation details for PostgreSQL.
Let&amp;rsquo;s again repeat a little bit about transaction islolation level. The SQL standard defines four levels of transaction isolation. The most strict is Serializable, which is defined by the standard in a paragraph which says that any concurrent execution of a set of Serializable transactions is guaranteed to produce the same effect as running them one at a time in some order.</description>
    </item>
    
  </channel>
</rss>