<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Just my blog</title>
    <link>http://iryndin.net/</link>
    <description>Recent content on Just my blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Dec 2017 16:14:52 +0300</lastBuildDate>
    
	<atom:link href="http://iryndin.net/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Optimistic and pessimistic concurrency control</title>
      <link>http://iryndin.net/post/optimistic_and_pessimistic_concurrency_control/</link>
      <pubDate>Mon, 04 Dec 2017 16:14:52 +0300</pubDate>
      
      <guid>http://iryndin.net/post/optimistic_and_pessimistic_concurrency_control/</guid>
      <description>Transactional isolation is usually implemented by locking whatever is accessed in a transaction. There are two different approaches to transactional locking:
 Pessimistic locking Optimistic locking  Pessimistic concurrency control (locking) Pessimistic locking is called &amp;ldquo;pessimistic&amp;rdquo; because the system assumes the worst — it assumes that two or more users will want to update the same record at the same time, and then prevents that possibility by locking the record, no matter how unlikely conflicts actually are.</description>
    </item>
    
    <item>
      <title>PostgreSQL transaction isolation levels</title>
      <link>http://iryndin.net/post/postgresql_transaction_isolation_levels/</link>
      <pubDate>Tue, 28 Nov 2017 09:59:58 +0300</pubDate>
      
      <guid>http://iryndin.net/post/postgresql_transaction_isolation_levels/</guid>
      <description>On previous post about transaction isolation levels we considered what is transaction isolation level and how this influence the result we get from transaction. But from database to database details are diferent, so let&amp;rsquo;s consider transaction isolation details for PostgreSQL.
Let&amp;rsquo;s again repeat a little bit about transaction islolation level. The SQL standard defines four levels of transaction isolation. The most strict is Serializable, which is defined by the standard in a paragraph which says that any concurrent execution of a set of Serializable transactions is guaranteed to produce the same effect as running them one at a time in some order.</description>
    </item>
    
    <item>
      <title>Transaction isolation levels</title>
      <link>http://iryndin.net/post/transaction_isolation_levels/</link>
      <pubDate>Tue, 28 Nov 2017 07:14:59 +0300</pubDate>
      
      <guid>http://iryndin.net/post/transaction_isolation_levels/</guid>
      <description>Let&amp;rsquo;s speak about transaction isolation levels.
ANSI/SQL standard isolation levels We have 4 standard-defined transaction isolation levels:
 Read uncommited. Dirty reads - YES, Non-Repeatable reads - YES, Phantom reads - YES. Read commited. Dirty reads - NO, Non-Repeatable reads - YES, Phantom reads - YES. Repeatable read. Dirty reads - NO, Non-Repeatable reads - NO, Phantom reads - YES. Serializable. Dirty reads - NO, Non-Repeatable reads - NO, Phantom reads - NO.</description>
    </item>
    
    <item>
      <title>Spring: destroy prototype beans</title>
      <link>http://iryndin.net/post/spring_destroy_prototype_beans/</link>
      <pubDate>Mon, 27 Nov 2017 18:53:22 +0300</pubDate>
      
      <guid>http://iryndin.net/post/spring_destroy_prototype_beans/</guid>
      <description>In previos post (Spring Bean PostProcessors) we considered some trivial examples of using BeanPostProcessor. Now let&amp;rsquo;s consider more interesting case - destruction of prototype-scoped beans. The reason for this is that Spring does not manage desctruction phase of prototype-scoped beans, as it is mentioned in the docs: 7.5.2 The prototype scope:
 In contrast to the other scopes, Spring does not manage the complete lifecycle of a prototype bean: the container instantiates, configures, and otherwise assembles a prototype object, and hands it to the client, with no further record of that prototype instance.</description>
    </item>
    
    <item>
      <title>Spring Bean PostProcessors</title>
      <link>http://iryndin.net/post/spring_beanpostprocessors/</link>
      <pubDate>Mon, 27 Nov 2017 15:45:43 +0300</pubDate>
      
      <guid>http://iryndin.net/post/spring_beanpostprocessors/</guid>
      <description>Let&amp;rsquo;s speak about Bean PostProcessors in Spring Framework.
The BeanPostProcessor interface defines callback methods that you can implement to provide your own (or override the container’s default) instantiation logic, dependency-resolution logic, and so forth. In Spring Framework Reference you can read about Bean PostProcessors in more details here: 7.8.1 Customizing beans using a BeanPostProcessor.
Shortly, you can use BeanPostProcessor for various initialization actions, as well as destroying actions, do some smart init/destroy actions en masse etc.</description>
    </item>
    
    <item>
      <title>Copy folder from AWS S3</title>
      <link>http://iryndin.net/post/copy_folder_from_aws_s3/</link>
      <pubDate>Sat, 18 Nov 2017 12:19:37 +0300</pubDate>
      
      <guid>http://iryndin.net/post/copy_folder_from_aws_s3/</guid>
      <description>How could we copy a folder from AWS S3 to local machine using AWS CLI?
Use cp command We can use cp command to copy folder or file from S3 to local machine. If we add parameter --recursive then we will get folder with all its files and folder inside. Example:
aws s3 cp s3://bucketname/foldername localdirname --recursive  This will copy folder foldername with all its content inside from S3 to local folder named localdirname.</description>
    </item>
    
    <item>
      <title>Java objects memory size</title>
      <link>http://iryndin.net/post/java_objects_memory_size/</link>
      <pubDate>Fri, 27 Oct 2017 16:40:07 +0300</pubDate>
      
      <guid>http://iryndin.net/post/java_objects_memory_size/</guid>
      <description>All numbers here are given for 64-bit JVMs.
Primitive types    Type Size, bytes     byte 1   char 2   short 2   int 4   long 8   float 4   double 8    boolean is 1 bit.
Size of objects Generally, size of any Java object in memory is a sum of following:</description>
    </item>
    
    <item>
      <title>Serialize list of dates into JSON with Jackson</title>
      <link>http://iryndin.net/post/json-serialize-list-of-dates-with-jackson/</link>
      <pubDate>Mon, 02 Oct 2017 10:50:35 +0300</pubDate>
      
      <guid>http://iryndin.net/post/json-serialize-list-of-dates-with-jackson/</guid>
      <description>Problem Let&amp;rsquo;s imagine that we need to return JSON form of the following Java object:
import java.util.Date; public class A { private String name; private List&amp;lt;Date&amp;gt; dates; public String getName() { return name; } public void setName(String name) { this.name = name; } public List&amp;lt;Date&amp;gt; getDates() { return dates; } public void setDates(List&amp;lt;Date&amp;gt; dates) { this.dates = dates; } }  If we return this class &amp;lsquo;as is&amp;rsquo;, without any helping directives to JSON serializer, we could get it in the following form:</description>
    </item>
    
    <item>
      <title>Spring Boot and AWT headless</title>
      <link>http://iryndin.net/post/spring_boot_and_awt_headless/</link>
      <pubDate>Wed, 20 Sep 2017 15:08:51 +0300</pubDate>
      
      <guid>http://iryndin.net/post/spring_boot_and_awt_headless/</guid>
      <description>The problem with AWT headless app in Spring Boot Recently I needed to create console Java Spring Boot app that does some stuff with AWT (not so important what exactly). I found that simple run with a normat Spring Boot stub simply does not work. Running this:
@SpringBootApplication public class MyAwtApplication { public static void main(String[] args) { SpringApplication.run(MyAwtApplication.class, args); } }  generates following exception when AWT-related processing happens:</description>
    </item>
    
    <item>
      <title>AWS permissions to S3 folder</title>
      <link>http://iryndin.net/post/aws-permissions-to-s3-folder/</link>
      <pubDate>Wed, 26 Apr 2017 23:46:17 +0300</pubDate>
      
      <guid>http://iryndin.net/post/aws-permissions-to-s3-folder/</guid>
      <description>Let&amp;rsquo;s imagine that we have a project, which actually use AWS S3 as file storage. The project consists of 2 parts: one part puts files into S3, and the other part only reads them from S3. Moreover, files are stored not in the bucket root, but in some folder which is placed in the bucket root.
According to best AWS practices, we need 2 security and access control policies. One policy is for that part of software which puts files into S3 folder.</description>
    </item>
    
    <item>
      <title>How SSH get port 22</title>
      <link>http://iryndin.net/post/how-ssh-get-port-22/</link>
      <pubDate>Sun, 23 Apr 2017 18:56:58 +0300</pubDate>
      
      <guid>http://iryndin.net/post/how-ssh-get-port-22/</guid>
      <description>A nice story from SSH creator (Tatu Ylonen) about how SSH got its port 22.
Briefly, initial SSH version was created in Spring 1995, time when FTP and Telnet were widely used. SSH was designed to replace FTP (port 21) and Telnet (port 23). Port 22 was free. So it was chosen to be used in SSH. At that time Internet was small, and port numbers were allocated by IANA, managed by Internet pioneers Jon Postel and Joyce K.</description>
    </item>
    
    <item>
      <title>Interesting HackerNews posts by 21 April 2017</title>
      <link>http://iryndin.net/post/interesting-hacker-news-posts-by-21-april-2017/</link>
      <pubDate>Fri, 21 Apr 2017 19:57:28 +0300</pubDate>
      
      <guid>http://iryndin.net/post/interesting-hacker-news-posts-by-21-april-2017/</guid>
      <description>Recursive DNS Server Fingerprint
They try to identify DNS hijacking by creating a database of DNS server fingerprints and comparing response of a particular DNS server (suspected to be hijacked) with its normal fingerprint.
Introducing Token
Token is a browser for the Ethereum network that provides universal access to financial services. It combines messaging app, Ethereum wallet and browser for Ethereum apps.
Scalable, Lie-Detecting Timeserving with Roughtime
Roughtime is a protocol designed to provide internet-scale secure time synchronization and address shortcomings of older protocols like NTP.</description>
    </item>
    
    <item>
      <title>Blockchain and Bitcoin links</title>
      <link>http://iryndin.net/post/blockchain-and-bitcoin-links/</link>
      <pubDate>Mon, 17 Apr 2017 22:50:22 +0300</pubDate>
      
      <guid>http://iryndin.net/post/blockchain-and-bitcoin-links/</guid>
      <description>This posts contains links to some articles, blog posts and other materials which looks interesting for me, give good explanation/description of the field and simply put are pleasure to read.
A blockchain in 200 lines of code
The blockchain explained to web developers. Part 1: The Theory
How migh we use blockchains outside cryptocurrencies
Mastering Bitcoin - open source book on Bitcoin published by OReilly
Awesome Bitcoin - GitHub repo with bitcoin-related links collection</description>
    </item>
    
    <item>
      <title>Timus 1005. Stone pile</title>
      <link>http://iryndin.net/post/timus-1005-stone-pile/</link>
      <pubDate>Mon, 17 Apr 2017 11:38:06 +0300</pubDate>
      
      <guid>http://iryndin.net/post/timus-1005-stone-pile/</guid>
      <description>This is a first post which describes how to solve some particular programming task. Today we will consider Stone pile task from Timus. It is clear and easy. The task sounds like:
Task Stone pile
Task You have a number of stones with known weights w1, …, wn. Write a program that will rearrange the stones into two piles such that weight difference between the piles is minimal.
Input Input contains the number of stones n (1 ≤ n ≤ 20) and weights of the stones w1, …, wn (integers, 1 ≤ wi ≤ 100000) delimited by white spaces.</description>
    </item>
    
    <item>
      <title>First post</title>
      <link>http://iryndin.net/post/first-post/</link>
      <pubDate>Fri, 14 Apr 2017 23:34:18 +0300</pubDate>
      
      <guid>http://iryndin.net/post/first-post/</guid>
      <description>Hi, after a long pause I decided to relaunch my blog. Here I am planning to tell mostly about technical things, put some useful findings, etc.</description>
    </item>
    
  </channel>
</rss>